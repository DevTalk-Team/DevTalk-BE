plugins {
	id 'java'
	id  'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	// id 'com.google.cloud.tools.jib' version '3.1.2'
}

group = 'com.devtalk.member'
version = '1.0'
sourceCompatibility = '17'

repositories {
	mavenCentral()
	maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
}

ext {
	set('springCloudVersion', "2022.0.3")
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.18.26'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'com.h2database:h2'
	// config
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	// mariaDB
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.4'
	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// spring-security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// jwt
//	implementation "io.jsonwebtoken:jjwt:0.9.1"
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation "io.jsonwebtoken:jjwt-impl:0.11.5"
	implementation "io.jsonwebtoken:jjwt-jackson:0.11.5"
	// com.sun.xml.bind
	implementation 'com.sun.xml.bind:jaxb-impl:4.0.1'
	implementation 'com.sun.xml.bind:jaxb-core:4.0.1'
	// javax.xml.bind
	implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
	// mail service
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// ⭐ Spring boot 3.x이상에서 QueryDsl 패키지를 정의하는 방법
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	// https://mvnrepository.com/artifact/org.json/json
	implementation 'org.json:json:20230227'
	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	// kafka
	implementation 'org.springframework.kafka:spring-kafka'
	// feign client
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	// aws s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	// File 관련
	implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// === ⭐ QueryDsl 빌드 옵션 (선택) ===
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
	file(querydslDir).deleteDir()
}
