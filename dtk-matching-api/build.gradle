plugins {
	id 'java'
	id  'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	// id 'com.google.cloud.tools.jib' version '3.1.2'
}


group = 'com.devtalk.consultation'
version = '1.0'
sourceCompatibility = '17'

configurations {
	compileOnly {
 		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
}

ext {
	set('springCloudVersion', "2022.0.3")
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'


	//OpenFeign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	//api
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// config
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	// mariaDB
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.4'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'

	implementation 'org.modelmapper:modelmapper:3.1.1'
	//thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	// mockito
	testImplementation 'org.mockito:mockito-core:5.2.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.2.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
	implementation 'org.modelmapper:modelmapper:3.1.1'

	// ⭐ Spring boot 3.x이상에서 QueryDsl 패키지를 정의하는 방법
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	// File 관련
	implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'

	implementation "com.fasterxml.uuid:java-uuid-generator:4.0.1" //UUID
}


dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		//mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.3"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// === ⭐ QueryDsl 빌드 옵션 (선택) ===
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
	file(querydslDir).deleteDir()
}